---
- summary: |
    Успешная регистрация нового пользователя с валидными данными
  requirement: |
    Пользователь должен иметь возможность создавать аккаунт
  prerequisites: |
    Открыта страница регистрации "Sign up"
  test-data: |
    Nickname = User2025
    Email = user@example.com  
    Пароль = StrongPass123$
  steps:
    - Вводим nickname
    - Вводим email
    - Вводим password
    - Повторяем password
    - Нажимаем кнопку «Sign up»
  expected-result: |
    Аккаунт создан, пользователь автоматически авторизован и перенаправлен на главную страницу

- summary: |
    Вход в систему с корректными данными
  requirement: |
    Пользователь должен иметь возможность входить в систему
  prerequisites: |
    Зарегистрирован пользователь  
    Открыта страница логина "Sign in"
  test-data: |
    Email = user@example.com  
    Password = StrongPass123$
  steps:
    - Вводим email
    - Вводим password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь успешно входит в систему и видит свою домашнюю страницу

- summary: |
    Выход из системы
  requirement: |
    Пользователь должен иметь возможность выйти из системы
  prerequisites: |
    Пользователь авторизован и находится на главной странице
  test-data: |
    Email = user@example.com  
    Password = StrongPass123$
  steps:
    - Нажимаем на аватарку в правом верхнем углу
    - Выбираем пункт «Sign out»
  expected-result: |
    Пользователь выходит из аккаунта и перенаправляется на главную страницу

- summary: |
    Вход пользователя через валидный GitHub аккаунт
  requirement: |
    Пользователь должен иметь возможность войти в систему через GitHub
  prerequisites: |
    У пользователя есть GitHub-аккаунт
  test-data: |
    GitHub аккаунт с доступом к Codebattle
  steps:
    - На главной странице нажимаем кнопку "Sign in with GitHub"
    - Подтверждаем авторизацию на стороне GitHub
  expected-result: |
    Пользователь автоматически авторизуется и попадает на главную страницу Codebattle

- summary: |
    Вход пользователя через валидный Discord аккаунт
  requirement: |
    Пользователь должен иметь возможность войти в систему через Discord
  prerequisites: |
    У пользователя есть Discord-аккаунт
  test-data: |
    Discord аккаунт с доступом к Codebattle
  steps:
    - На главной странице нажимаем кнопку "Sign in with Discord"
    - Подтверждаем авторизацию через Discord
  expected-result: |
    Пользователь успешно входит и перенаправляется в систему

- summary: |
    Проверка входа пользователя с несуществующими логином и паролем
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites: |
    Открыта страница логина
  test-data: |
    Тестовые данные
    email = ilona@gmail.com Password = password
  steps:
    - Вводим email
    - Вводим password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Восстановление пароля через email
  requirement: |
    Пользователь должен иметь возможность восстановить пароль
  prerequisites: |
    Открыта страница логина  
    Нет активной сессии
  test-data: |
    Email = user@example.com
  steps:
    - Нажимаем «Forgot your password?»
    - Вводим зарегистрированный email
    - Переходим по ссылке из письма
    - Вводим новый пароль и подтверждение
  expected-result: |
    Появляется уведомление, после входа новым паролем — доступ разрешён

- summary: |
    Создание пробной игры
  requirement: |
    Пользователь должен иметь возможность создать пробную игру
  prerequisites: |
    Пользователь авторизован  
    Открыта страница создания игры
  test-data: |
    Game type = "Training"
  steps:
    - Открываем «Create a game»
    - Выбираем тип игры = "Training"
    - Нажимаем "Create battle"
  expected-result: |
    Пробная игра создаётся и отображается в списке активных игр без влияния на рейтинг

- summary: |
    Создание новой игры с выбранным уровнем сложности
  requirement: |
    Пользователь должен иметь возможность создавать игру и выбирать уровень сложности
  prerequisites: |
    Пользователь авторизован  
    Открыта главная страница
  test-data: |
    Level = 2 звезды
    Game type = "With a bot"
  steps:
    - Нажимаем «Create a game»
    - Выбираем Level = 2 звезды
    - Выбираем Game type = "With a bot"
    - Нажимаем "Create battle"
  expected-result: |
    Игра создаётся, новая игра отображается в твоем Lobby

- summary: |
    Участие пользователя в турнире
  requirement: |
    Пользователь должен иметь возможность участвовать в турнирах
  prerequisites: |
    Пользователь авторизован  
    Активен хотя бы один турнир
  test-data: |
    Название турнира = любой активный
  steps:
    - Переходим во вкладку "Tournaments"
    - Выбираем активный турнир
    - Нажимаем кнопку "Join"
  expected-result: |
    Пользователь успешно присоединяется к турниру и отображается в списке участников

- summary: |
    Приглашение друга в игру
  requirement: |
    Пользователь должен иметь возможность приглашать друга в игру при её создании
  prerequisites: |
    Пользователь находится на странице создания игры  
    Друг авторизован и отображается в списке
  test-data: |
    Участник = друг из списка
  steps:
    - Выбираем Game type = "With a friend"
    - Выбираем друга из списка
    - Нажимаем кнопку «Create battle»
  expected-result: |
    Отображается уведомление об отправке приглашения, друг получает приглашение на игру

- summary: |
    Одновременное отображение редактора кода и вывода тестов в реальном времени
  requirement: |
    Пользователь должен иметь возможность во время матча видеть редактор кода и вывод тестов
  prerequisites: |
    Оба игрока (или игрок и бот) присоединены к игре  
    Игра запущена
  test-data: |
    Код задачи: простая функция сложения
  steps:
    - Один игрок вводит код
    - Запускает тесты
    - Другой игрок наблюдает за редактором и выводом
  expected-result: |
    Оба игрока видят вводимый код и результаты тестов в реальном времени

- summary: |
    Смена языка программирования во время матча
  requirement: |
    Пользователь должен иметь возможность менять язык во время матча
  prerequisites: |
    Игра запущена  
    Оба игрока в редакторе
  test-data: |
    Начальный язык = JavaScript  
    Новый язык = Python
  steps:
    - Открываем выпадающий список языков
    - Выбираем «Python»
  expected-result: |
    Редактор и подсветка кода переключаются на Python без перезагрузки страницы

- summary: |
    Просмотр списка завершённых игр пользователя
  requirement: |
    Пользователь должен иметь возможность просматривать завершённые игры
  prerequisites: |
    Пользователь авторизован  
    У пользователя есть завершённые игры
  test-data: |
    Одна завершённая игра
  steps:
    - Переходим в раздел "My Profile"
    - Переходим во вкладку "Completed Games"
  expected-result: |
    Отображается список завершённых игр с возможностью открыть реплей
    
- summary: |
    Вступление пользователя в клан
  requirement: |
    Пользователь должен иметь возможность вступать в существующие кланы
  prerequisites: |
    Пользователь авторизован  
    Существует хотя бы один открытый клан
  test-data: |
    Название клана = любой доступный
  steps:
    - Переходим в раздел "Clans"
    - Выбираем открытый клан
    - Нажимаем "Join clan"
  expected-result: |
    Пользователь становится участником выбранного клана


- summary: |
    Наблюдение за чужой игрой (spectator mode)
  requirement: |
    Пользователь может следить за ходом чужих матчей в режиме реального времени
  prerequisites: |
    Есть запущенная чужая игра  
    Открыта страница списка игр
  test-data: |
    Выбранная игра из списка
  steps:
    - Нажимаем «Наблюдать» напротив чужой игры
  expected-result: |
    Открывается окно с редактором и выводом тестов участников, без возможности редактировать

- summary: |
    Проверка работы чата внутри игры
  requirement: |
    Пользователь должен иметь возможность использовать чат внутри игры в режиме реального времени
  prerequisites: |
    Игра запущена  
    Два участника в лобби
  test-data: |
    Сообщение = «Привет, удачи!»  
    Ответ = «Спасибо!»
  steps:
    - Отправляем сообщение «Привет, удачи!»
    - Второй участник отвечает «Спасибо!»
  expected-result: |
    Оба сообщения мгновенно отображаются у обоих участников

- summary: |
    Приглашение игрока на дуэль через чат
  requirement: |
    Пользователь должен иметь возможность пригласить другого пользователя в игру из чата
  prerequisites: |
    Пользователь авторизован  
    Другой пользователь онлайн и доступен в чате
  test-data: |
    Сообщение: “@username Let's play!”
  steps:
    - Пишем в чате “@username Let's play!”
    - Нажимаем на появившуюся кнопку “Invite to battle”
  expected-result: |
    Пользователь получает приглашение на дуэль, отображается уведомление

- summary: |
    Воспроизведение завершённой игры через проигрыватель
  requirement: |
    После прохождения игры пользователь должен иметь возможность проиграть игру в проигрывателе
  prerequisites: |
    Существует хотя бы одна завершённая игра в профиле
  test-data: |
    Выбранная завершённая игра
  steps:
    - Переходим My profile
    - Переходим в Completed Games
    - В списке игр нажимаем «Show»
  expected-result: |
    Открывается проигрыватель, по шагам воспроизводится код и прохождение тестов

- summary: |
    Изменение настроек профиля пользователя
  requirement: |
    Пользователь должен иметь возможность редактировать доступные настройки профиля
  prerequisites: |
    Пользователь авторизован и находится на странице "Settings"
  test-data: |
    Имя = AljonaS-ux  
    Язык программирования = JavaScript  
    Клан = TestClan  
    Звук = CS  
    Уровень громкости = средний
  steps:
    - Меняем поле "Your name" на "AljonaS-ux"
    - Выбираем язык программирования "JavaScript" из выпадающего списка
    - Вводим название клана "TestClan"
    - Выбираем тип звука "CS"
    - Передвигаем ползунок громкости на средний уровень
    - Нажимаем кнопку "Save"
  expected-result: |
    Все изменения сохраняются и применяются без ошибок

- summary: |
    Проверка пагинации в общем рейтинге пользователей
  requirement: |
    Интерфейс должен поддерживать пагинацию или бесконечную прокрутку в списках рейтингов
  prerequisites: |
    Пользователь авторизован
    В рейтинге более 20 участников
  test-data: |
    Период = "Weekly"
  steps:  |
   Перейти в раздел "Top List"
   Выбрать период "Weekly"
   Прокрутить вниз страницы или нажать кнопку перехода на следующую страницу
   Убедиться, что загружаются следующие пользователи в рейтинге
  expected-result: |
   Следующая часть списка загружается без ошибок, данные пользователей отображаются корректно, переключение между страницами работает

- summary: |
    Просмотр рейтинга за неделю
  requirement: |
    Пользователь должен иметь возможность просматривать свой рейтинг за неделю
  prerequisites: |
    Пользователь авторизован и участвовал в играх
  test-data: |
    Период = "Неделя"
  steps:
    - Переходим в раздел «My Profile»
    - Выбираем период «Неделя»
  expected-result: |
    Отображается таблица рейтинга за неделю с позициями и очками пользователя

- summary: |
    Просмотр рейтинга за месяц
  requirement: |
    Пользователь должен иметь возможность просматривать свой рейтинг за месяц
  prerequisites: |
    Пользователь авторизован и участвовал в играх
  test-data: |
    Период = "Месяц"
  steps:
    - Переходим в раздел «My Profile»
    - Выбираем период «Месяц»
  expected-result: |
    Отображается таблица рейтинга за месяц с позициями и очками пользователя
    
- summary: |
    Просмотр рейтинга за всё время
  requirement: |
    Пользователь должен иметь возможность просматривать свой рейтинг за всё время
  prerequisites: |
    Пользователь авторизован и участвовал в играх
  test-data: |
    Период = "Все время"
  steps:
    - Переходим в раздел «My Profile»
    - Выбираем период «Все время»
  expected-result: |
    Отображается таблица рейтинга за всё время с позициями и очками пользователя

- summary: |
    Проверка адаптивности интерфейса на мобильных устройствах
  requirement: |
    Сайт должен корректно отображаться на мобильных устройствах
  prerequisites: |
    Открыты мобильные эмуляторы:
    - iPhone 12 (390x844)
    - Pixel 5 (393x851)
    Проверка в портретной и ландшафтной ориентации
  test-data: |
    Страницы: Главная, Лобби игры, Игровой экран
  steps:
    - Открыть каждую страницу в портретном и ландшафтном режиме эмулятора
    - Проверить доступность меню, редактора, кнопок
  expected-result: |
    Все элементы видимы, не перекрываются, меню открывается и закрывается без багов

- summary: |
    Проверка перевода задач на английский и русский язык
  requirement: |
    Задачи должны иметь полную поддержку русского и английского языков
  prerequisites: |
    Пользователь авторизован  
    Игра создана и начата
    Задача в игре доступна как на английском, так и на русском языке. 
  test-data: |
    Языки = Russian, Englih
  steps:
    - Кликнуть на кнопку выбора языка → выбрать «English»  
    - Проверить, что задача переведена на английский язык
    - Повторить для «Russian»
  expected-result: |
    Задача полностью переведена на выбранный язык

- summary: |
    Проверка активности Telegram-канала разработчиков
  requirement: |
    Сообщество взаимодействует через Telegram-канал
  prerequisites: |
    Доступ в Telegram
  test-data: |
    Ссылка = https://t.me/codebattle
  steps:
    - Перейти по ссылке в браузере или мобильном приложении  
    - Убедиться, что канал существует и появляются новые сообщения
  expected-result: |
    Канал открыт, последние сообщения не старше недели

- summary: |
    Проверка работоспособности Chrome-extension
  requirement: |
    Возможность разработки и поддержки Chrome-extension
  prerequisites: |
    Собран и загружен в режиме разработчика Chrome-extension из репозитория
  test-data: |
    Страница сайта Codebattle в браузере
  steps:
    - Установить extension в Chrome  
    - Открыть любую страницу Codebattle  
    - Проверить, что extension инициализируется и добавляет ожидаемый UI (например, кнопки или подсветку)
  expected-result: |
    Расширение загружается без ошибок, интегрируется с сайтом согласно спецификации

- summary: |
    Проверка использования HTTPS на сайте
  requirement: |
    Сайт должен обеспечивать безопасность хранения и передачи данных пользователя (HTTPS)
  prerequisites: |
    Пользователь открывает сайт
  test-data: |
    URL = https://codebattle.hexlet.io
  steps:
    - В адресной строке проверяем наличие HTTPS
    - Открываем DevTools → Security
  expected-result: |
    Соединение защищено, сертификат валиден

